//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Game/Scripts/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""CharacterInput"",
            ""id"": ""8401299c-997a-45a3-a21c-ac179c25821d"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""a681216e-47a8-4129-8ac3-8ef78bb73937"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b93bf7b2-c856-49b2-8c1a-147e1dd017b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Guard"",
                    ""type"": ""Button"",
                    ""id"": ""e49a1aed-31e8-4582-bcbf-d3ebce78b382"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetLock"",
                    ""type"": ""Button"",
                    ""id"": ""07794f1b-0ef9-4657-aa61-a0e64f9ec05d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemA"",
                    ""type"": ""Button"",
                    ""id"": ""8374cdcf-167d-4baf-8f12-9ecfd241d8a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemB"",
                    ""type"": ""Button"",
                    ""id"": ""abdd722e-2c02-492e-930e-ef4b98b94fe3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""6bcdfc94-cfa3-4e22-a360-242c8aaf5746"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""ff238bfc-f43c-410b-8f18-2697aab21a00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""d5dd1ba6-51cf-4ec7-83fd-1b869cf07165"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""fce6dd15-c947-41e9-a6e5-6bd802a28068"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""007a9eca-77c8-4030-a506-2f20ccdd8001"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Test"",
                    ""type"": ""Value"",
                    ""id"": ""757e96c7-1ae6-4915-bee8-1ab660341a4d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrows"",
                    ""id"": ""53b9edd9-d101-4182-b161-8a4816f1234f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3c1f48e5-3eff-44ca-9555-79355db1a0b1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6ea54b82-a689-46ea-8a1f-1b24fada4d96"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""87311c10-7622-439f-87ac-e50dd25064e1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5e320c00-2075-49a4-91ce-90d833897abc"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""a724e1c8-3c85-478d-ab6e-955952da170f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""899a1b00-d56a-471e-ad2c-576e1b21ec0e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""98581995-6c14-43a8-9153-14b127b7bdbf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""04d86db0-5f8b-47f1-bab2-a2db2e5ebcf8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fbccc81a-6edc-4cb2-ad73-e120d6c577f1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""35b6f7db-d8b5-4146-a031-2323a42b3bf0"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae860469-c511-4c35-95cf-6081c77d94f1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Guard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""457cfb90-a8cd-4f0f-98b3-3432190c258c"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TargetLock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""729ba50f-77a9-4f06-a815-0d34a4efff82"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ItemA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f59d26d2-401b-428b-96ad-90f3528d71ae"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ItemB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""NumPad"",
                    ""id"": ""4ab7702a-fcff-4eb7-aca7-60faf97a06f8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9c8effb2-55c9-4703-bc52-3fbb9b95bde4"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f0d5426d-e620-4221-b34d-113365455a0b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a5414c9b-5561-4cf3-a8b5-7f76126c6e02"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a1caf9dc-cced-4b0a-9bcc-5d8948c51427"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c3442198-5431-49a5-ab19-806ab40b1f7b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44ced654-d8c5-4daf-8540-06e2b1d11325"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""344cd79b-9006-405f-94cd-cde64ed2d29e"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f56cde0d-a8ec-434d-85f9-b515c22ee630"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""74f8e0e6-3345-4b64-84fb-435fd88ec4be"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Test"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6e5123ae-bac4-453a-99b8-761c91f60159"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Test"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""277057a0-b8ad-4ddc-aa7a-8f2bb21594d0"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Test"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""InventoryInput"",
            ""id"": ""d422b4ba-cbe4-40e1-a4bd-a4ba95c2269c"",
            ""actions"": [
                {
                    ""name"": ""Navigation"",
                    ""type"": ""Value"",
                    ""id"": ""356a8140-1ed5-4a91-a01d-79ee872a1fc8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SetItemA"",
                    ""type"": ""Button"",
                    ""id"": ""16a75264-a414-4206-ab67-62b444770c3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SetItemB"",
                    ""type"": ""Button"",
                    ""id"": ""ab9053ea-3920-49a7-82e1-bc2e4a4823ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""385066ca-6668-4545-ad32-a7124d5dc87b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrows"",
                    ""id"": ""e89520f7-9fd4-4743-8338-aa550eefce86"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e398c92a-5b7e-4fa5-b5b1-4d14480df46a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d95dbee2-fdbe-4a07-bf37-35dc0eddaf6c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2a28bc05-ed1a-41c5-b24e-ba30967ffe12"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""889e9483-6b3f-49c1-a10d-e57ee11c7d12"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""40d1003e-c567-4629-a59f-b323925626ab"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SetItemA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2cc9ade-374e-4cad-b20f-c01d4585a651"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SetItemB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59421979-6dff-4d99-96b0-4cddedb23f09"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIInput"",
            ""id"": ""1d37854b-7d3b-4001-af8d-7434ec8a34e1"",
            ""actions"": [
                {
                    ""name"": ""Navigation"",
                    ""type"": ""Value"",
                    ""id"": ""234503a3-24aa-4bd8-8833-f941812f4a7c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""bda5c6c4-bd24-46d2-bd08-e5e3c00e7a79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""6409fd47-e3ea-4b8a-b46c-fc41fa14d09b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""234de466-da05-4311-82aa-aab6dfc63a7e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bfe8627b-9a26-4671-805f-c0ce67224495"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""faef4b62-3706-4c34-a4e8-1097f10de8ec"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aaf21489-ca42-43ca-94ef-f8b9e993f078"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c473f598-14b3-442d-9613-12b5ca50df21"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5d1671ec-1831-478b-928e-5f078c3519bb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b882894b-1bdf-4c9d-8aad-5cbbfaa82791"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // CharacterInput
        m_CharacterInput = asset.FindActionMap("CharacterInput", throwIfNotFound: true);
        m_CharacterInput_Walk = m_CharacterInput.FindAction("Walk", throwIfNotFound: true);
        m_CharacterInput_Interact = m_CharacterInput.FindAction("Interact", throwIfNotFound: true);
        m_CharacterInput_Guard = m_CharacterInput.FindAction("Guard", throwIfNotFound: true);
        m_CharacterInput_TargetLock = m_CharacterInput.FindAction("TargetLock", throwIfNotFound: true);
        m_CharacterInput_ItemA = m_CharacterInput.FindAction("ItemA", throwIfNotFound: true);
        m_CharacterInput_ItemB = m_CharacterInput.FindAction("ItemB", throwIfNotFound: true);
        m_CharacterInput_Camera = m_CharacterInput.FindAction("Camera", throwIfNotFound: true);
        m_CharacterInput_Attack = m_CharacterInput.FindAction("Attack", throwIfNotFound: true);
        m_CharacterInput_Map = m_CharacterInput.FindAction("Map", throwIfNotFound: true);
        m_CharacterInput_Menu = m_CharacterInput.FindAction("Menu", throwIfNotFound: true);
        m_CharacterInput_Inventory = m_CharacterInput.FindAction("Inventory", throwIfNotFound: true);
        m_CharacterInput_Test = m_CharacterInput.FindAction("Test", throwIfNotFound: true);
        // InventoryInput
        m_InventoryInput = asset.FindActionMap("InventoryInput", throwIfNotFound: true);
        m_InventoryInput_Navigation = m_InventoryInput.FindAction("Navigation", throwIfNotFound: true);
        m_InventoryInput_SetItemA = m_InventoryInput.FindAction("SetItemA", throwIfNotFound: true);
        m_InventoryInput_SetItemB = m_InventoryInput.FindAction("SetItemB", throwIfNotFound: true);
        m_InventoryInput_Cancel = m_InventoryInput.FindAction("Cancel", throwIfNotFound: true);
        // UIInput
        m_UIInput = asset.FindActionMap("UIInput", throwIfNotFound: true);
        m_UIInput_Navigation = m_UIInput.FindAction("Navigation", throwIfNotFound: true);
        m_UIInput_Confirm = m_UIInput.FindAction("Confirm", throwIfNotFound: true);
        m_UIInput_Cancel = m_UIInput.FindAction("Cancel", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CharacterInput
    private readonly InputActionMap m_CharacterInput;
    private List<ICharacterInputActions> m_CharacterInputActionsCallbackInterfaces = new List<ICharacterInputActions>();
    private readonly InputAction m_CharacterInput_Walk;
    private readonly InputAction m_CharacterInput_Interact;
    private readonly InputAction m_CharacterInput_Guard;
    private readonly InputAction m_CharacterInput_TargetLock;
    private readonly InputAction m_CharacterInput_ItemA;
    private readonly InputAction m_CharacterInput_ItemB;
    private readonly InputAction m_CharacterInput_Camera;
    private readonly InputAction m_CharacterInput_Attack;
    private readonly InputAction m_CharacterInput_Map;
    private readonly InputAction m_CharacterInput_Menu;
    private readonly InputAction m_CharacterInput_Inventory;
    private readonly InputAction m_CharacterInput_Test;
    public struct CharacterInputActions
    {
        private @InputActions m_Wrapper;
        public CharacterInputActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_CharacterInput_Walk;
        public InputAction @Interact => m_Wrapper.m_CharacterInput_Interact;
        public InputAction @Guard => m_Wrapper.m_CharacterInput_Guard;
        public InputAction @TargetLock => m_Wrapper.m_CharacterInput_TargetLock;
        public InputAction @ItemA => m_Wrapper.m_CharacterInput_ItemA;
        public InputAction @ItemB => m_Wrapper.m_CharacterInput_ItemB;
        public InputAction @Camera => m_Wrapper.m_CharacterInput_Camera;
        public InputAction @Attack => m_Wrapper.m_CharacterInput_Attack;
        public InputAction @Map => m_Wrapper.m_CharacterInput_Map;
        public InputAction @Menu => m_Wrapper.m_CharacterInput_Menu;
        public InputAction @Inventory => m_Wrapper.m_CharacterInput_Inventory;
        public InputAction @Test => m_Wrapper.m_CharacterInput_Test;
        public InputActionMap Get() { return m_Wrapper.m_CharacterInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterInputActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterInputActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterInputActionsCallbackInterfaces.Add(instance);
            @Walk.started += instance.OnWalk;
            @Walk.performed += instance.OnWalk;
            @Walk.canceled += instance.OnWalk;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Guard.started += instance.OnGuard;
            @Guard.performed += instance.OnGuard;
            @Guard.canceled += instance.OnGuard;
            @TargetLock.started += instance.OnTargetLock;
            @TargetLock.performed += instance.OnTargetLock;
            @TargetLock.canceled += instance.OnTargetLock;
            @ItemA.started += instance.OnItemA;
            @ItemA.performed += instance.OnItemA;
            @ItemA.canceled += instance.OnItemA;
            @ItemB.started += instance.OnItemB;
            @ItemB.performed += instance.OnItemB;
            @ItemB.canceled += instance.OnItemB;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Map.started += instance.OnMap;
            @Map.performed += instance.OnMap;
            @Map.canceled += instance.OnMap;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
            @Test.started += instance.OnTest;
            @Test.performed += instance.OnTest;
            @Test.canceled += instance.OnTest;
        }

        private void UnregisterCallbacks(ICharacterInputActions instance)
        {
            @Walk.started -= instance.OnWalk;
            @Walk.performed -= instance.OnWalk;
            @Walk.canceled -= instance.OnWalk;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Guard.started -= instance.OnGuard;
            @Guard.performed -= instance.OnGuard;
            @Guard.canceled -= instance.OnGuard;
            @TargetLock.started -= instance.OnTargetLock;
            @TargetLock.performed -= instance.OnTargetLock;
            @TargetLock.canceled -= instance.OnTargetLock;
            @ItemA.started -= instance.OnItemA;
            @ItemA.performed -= instance.OnItemA;
            @ItemA.canceled -= instance.OnItemA;
            @ItemB.started -= instance.OnItemB;
            @ItemB.performed -= instance.OnItemB;
            @ItemB.canceled -= instance.OnItemB;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Map.started -= instance.OnMap;
            @Map.performed -= instance.OnMap;
            @Map.canceled -= instance.OnMap;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
            @Test.started -= instance.OnTest;
            @Test.performed -= instance.OnTest;
            @Test.canceled -= instance.OnTest;
        }

        public void RemoveCallbacks(ICharacterInputActions instance)
        {
            if (m_Wrapper.m_CharacterInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterInputActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterInputActions @CharacterInput => new CharacterInputActions(this);

    // InventoryInput
    private readonly InputActionMap m_InventoryInput;
    private List<IInventoryInputActions> m_InventoryInputActionsCallbackInterfaces = new List<IInventoryInputActions>();
    private readonly InputAction m_InventoryInput_Navigation;
    private readonly InputAction m_InventoryInput_SetItemA;
    private readonly InputAction m_InventoryInput_SetItemB;
    private readonly InputAction m_InventoryInput_Cancel;
    public struct InventoryInputActions
    {
        private @InputActions m_Wrapper;
        public InventoryInputActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigation => m_Wrapper.m_InventoryInput_Navigation;
        public InputAction @SetItemA => m_Wrapper.m_InventoryInput_SetItemA;
        public InputAction @SetItemB => m_Wrapper.m_InventoryInput_SetItemB;
        public InputAction @Cancel => m_Wrapper.m_InventoryInput_Cancel;
        public InputActionMap Get() { return m_Wrapper.m_InventoryInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryInputActions set) { return set.Get(); }
        public void AddCallbacks(IInventoryInputActions instance)
        {
            if (instance == null || m_Wrapper.m_InventoryInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InventoryInputActionsCallbackInterfaces.Add(instance);
            @Navigation.started += instance.OnNavigation;
            @Navigation.performed += instance.OnNavigation;
            @Navigation.canceled += instance.OnNavigation;
            @SetItemA.started += instance.OnSetItemA;
            @SetItemA.performed += instance.OnSetItemA;
            @SetItemA.canceled += instance.OnSetItemA;
            @SetItemB.started += instance.OnSetItemB;
            @SetItemB.performed += instance.OnSetItemB;
            @SetItemB.canceled += instance.OnSetItemB;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
        }

        private void UnregisterCallbacks(IInventoryInputActions instance)
        {
            @Navigation.started -= instance.OnNavigation;
            @Navigation.performed -= instance.OnNavigation;
            @Navigation.canceled -= instance.OnNavigation;
            @SetItemA.started -= instance.OnSetItemA;
            @SetItemA.performed -= instance.OnSetItemA;
            @SetItemA.canceled -= instance.OnSetItemA;
            @SetItemB.started -= instance.OnSetItemB;
            @SetItemB.performed -= instance.OnSetItemB;
            @SetItemB.canceled -= instance.OnSetItemB;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
        }

        public void RemoveCallbacks(IInventoryInputActions instance)
        {
            if (m_Wrapper.m_InventoryInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInventoryInputActions instance)
        {
            foreach (var item in m_Wrapper.m_InventoryInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InventoryInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InventoryInputActions @InventoryInput => new InventoryInputActions(this);

    // UIInput
    private readonly InputActionMap m_UIInput;
    private List<IUIInputActions> m_UIInputActionsCallbackInterfaces = new List<IUIInputActions>();
    private readonly InputAction m_UIInput_Navigation;
    private readonly InputAction m_UIInput_Confirm;
    private readonly InputAction m_UIInput_Cancel;
    public struct UIInputActions
    {
        private @InputActions m_Wrapper;
        public UIInputActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigation => m_Wrapper.m_UIInput_Navigation;
        public InputAction @Confirm => m_Wrapper.m_UIInput_Confirm;
        public InputAction @Cancel => m_Wrapper.m_UIInput_Cancel;
        public InputActionMap Get() { return m_Wrapper.m_UIInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIInputActions set) { return set.Get(); }
        public void AddCallbacks(IUIInputActions instance)
        {
            if (instance == null || m_Wrapper.m_UIInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIInputActionsCallbackInterfaces.Add(instance);
            @Navigation.started += instance.OnNavigation;
            @Navigation.performed += instance.OnNavigation;
            @Navigation.canceled += instance.OnNavigation;
            @Confirm.started += instance.OnConfirm;
            @Confirm.performed += instance.OnConfirm;
            @Confirm.canceled += instance.OnConfirm;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
        }

        private void UnregisterCallbacks(IUIInputActions instance)
        {
            @Navigation.started -= instance.OnNavigation;
            @Navigation.performed -= instance.OnNavigation;
            @Navigation.canceled -= instance.OnNavigation;
            @Confirm.started -= instance.OnConfirm;
            @Confirm.performed -= instance.OnConfirm;
            @Confirm.canceled -= instance.OnConfirm;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
        }

        public void RemoveCallbacks(IUIInputActions instance)
        {
            if (m_Wrapper.m_UIInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIInputActions instance)
        {
            foreach (var item in m_Wrapper.m_UIInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIInputActions @UIInput => new UIInputActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface ICharacterInputActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnGuard(InputAction.CallbackContext context);
        void OnTargetLock(InputAction.CallbackContext context);
        void OnItemA(InputAction.CallbackContext context);
        void OnItemB(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnMap(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnTest(InputAction.CallbackContext context);
    }
    public interface IInventoryInputActions
    {
        void OnNavigation(InputAction.CallbackContext context);
        void OnSetItemA(InputAction.CallbackContext context);
        void OnSetItemB(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
    }
    public interface IUIInputActions
    {
        void OnNavigation(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
    }
}
